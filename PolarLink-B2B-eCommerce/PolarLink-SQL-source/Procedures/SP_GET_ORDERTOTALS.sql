SET PATH *LIBL ;

CREATE OR REPLACE PROCEDURE SP_GET_ORDERTOTALS ( 
	IN IN_ORDERNUM DECIMAL(8, 0) , 
	OUT OUT_AMOUNT DECIMAL(11, 2) , 
	OUT OUT_CASE_QTY DECIMAL(11, 2) , 
	OUT OUT_PALLET_QTY DECIMAL(11, 2) , 
	OUT OUT_PRODUCT_WGT DECIMAL(11, 0) , 
	OUT OUT_PALLET_WGT DECIMAL(11, 0) , 
	OUT OUT_TOTAL_WGT DECIMAL(11, 0) , 
	OUT OUT_RESULT CHAR(1) , 
	OUT OUT_MESSAGE VARCHAR(100) ) 
	LANGUAGE SQL 
	SPECIFIC SP_GET_ORDERTOTALS 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DBGVIEW = *SOURCE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
/*================================================================================ 
Created August 2015 by John Valance 
  
Retrieve values for display in order totals box. 
  
Returns: 
	No result sets. See output parameters. 
  
=================================================================================*/ 
	DECLARE WK_RESULT CHAR ( 1 ) ; 
	DECLARE WK_MESSAGE VARCHAR ( 100 ) ; 
  
	DECLARE OL_ORDER_NUM DEC ( 8 , 0 ) ; 
	DECLARE OL_LINE_NUM DEC ( 4 , 0 ) ; 
	DECLARE OL_ITEM_NUM CHAR ( 35 ) ; 
	DECLARE OL_ITEM_DESC CHAR ( 30 ) ; 
	DECLARE OL_QTY_ORD DEC ( 11 , 3 ) ; 
	DECLARE OL_LIST_PRICE DEC ( 11 , 2 ) ; 
	DECLARE OL_NET_PRICE DEC ( 11 , 2 ) ; 
	DECLARE OL_EXT_PRICE DEC ( 13 , 2 ) ; 
	DECLARE OL_PALLET_QTY DEC ( 13 , 4 ) ; 
	DECLARE OL_SELL_UOM CHAR ( 2 ) ; 
	DECLARE OL_SELL_UOM_CONV DEC ( 11 , 5 ) ; 
	DECLARE OL_ITEM_WGHT DEC ( 7 , 3 ) ; 
	DECLARE OL_ITEM_CLASS CHAR ( 2 ) ; 
	DECLARE OL_UNITS_PER_PALLET DEC ( 11 , 3 ) ; 
	DECLARE ITM_CASE_QTY_ORD DEC ( 13 , 2 ) ; 
	DECLARE ITM_UNIT_QTY_ORD DEC ( 13 , 2 ) ; 
	DECLARE ITM_PALLET_QTY_ORD DEC ( 13 , 4 ) ; 
	DECLARE WK_PALLET_WGT DEC ( 7 , 3 ) ; 
	DECLARE WK_PALLET_QTY DEC ( 11 , 2 ) ; 
  
	DECLARE RSL RESULT_SET_LOCATOR VARYING ; 
  
  
	DECLARE AT_END INT DEFAULT 0 ; 
DECLARE NOT_FOUND CONDITION FOR '02000' ; 
DECLARE CONTINUE HANDLER FOR NOT FOUND SET AT_END = 1 ; 
  
	 --================================================================ 
-- Initialize work variables 
	SET OUT_MESSAGE = '' ; 
	SET OUT_RESULT = '1' ; 
SET OUT_AMOUNT = 0 ; 
	SET OUT_CASE_QTY = 0 ; 
	SET OUT_PALLET_QTY = 0 ; 
	SET OUT_PRODUCT_WGT = 0 ; 
	SET OUT_PALLET_WGT = 0 ; 
	SET OUT_TOTAL_WGT = 0 ; 
  
-- Call the procedure returning the result set 
CALL SP_GET_ORDERLINEITEMS ( IN_ORDERNUM , WK_RESULT , WK_MESSAGE ) ; 
  
-- Get a cursor for the result set 
ASSOCIATE RESULT SET LOCATOR ( RSL ) WITH PROCEDURE SP_GET_ORDERLINEITEMS ; 
ALLOCATE CUR CURSOR FOR RESULT SET RSL ; 
  
FETCH CUR INTO 
		OL_ORDER_NUM , OL_LINE_NUM , OL_ITEM_NUM , OL_ITEM_DESC , OL_QTY_ORD , 
		OL_NET_PRICE , 
		OL_LIST_PRICE , OL_EXT_PRICE , OL_PALLET_QTY , OL_SELL_UOM , 
		OL_SELL_UOM_CONV , OL_ITEM_WGHT , OL_ITEM_CLASS , 
		OL_UNITS_PER_PALLET , ITM_CASE_QTY_ORD , ITM_UNIT_QTY_ORD , ITM_PALLET_QTY_ORD 
	; 
  
	WHILE AT_END <> 1 DO 
	SET OUT_AMOUNT = OUT_AMOUNT + OL_EXT_PRICE ; 
		SET OUT_CASE_QTY = OUT_CASE_QTY + ITM_CASE_QTY_ORD ; 
		SET OUT_PALLET_QTY = OUT_PALLET_QTY + ITM_PALLET_QTY_ORD ; 
		SET OUT_PRODUCT_WGT = OUT_PRODUCT_WGT + ( OL_ITEM_WGHT * OL_QTY_ORD ) ; 
		SET OUT_PALLET_WGT = OUT_PALLET_WGT + 0 ; 
		SET OUT_TOTAL_WGT = OUT_TOTAL_WGT + ( OL_ITEM_WGHT * OL_QTY_ORD ) ; 
  
FETCH CUR INTO 
			OL_ORDER_NUM , OL_LINE_NUM , OL_ITEM_NUM , OL_ITEM_DESC , OL_QTY_ORD , 
			OL_NET_PRICE , 
			OL_LIST_PRICE , OL_EXT_PRICE , OL_PALLET_QTY , OL_SELL_UOM , 
			OL_SELL_UOM_CONV , OL_ITEM_WGHT , OL_ITEM_CLASS , 
			OL_UNITS_PER_PALLET , ITM_CASE_QTY_ORD , ITM_UNIT_QTY_ORD , ITM_PALLET_QTY_ORD 
		; 
	END WHILE ; 
  
CLOSE CUR ; 
  
-- Calc total pallet weight 
SELECT IWGHT INTO WK_PALLET_WGT FROM IIM WHERE IPROD = '08900' ; 
IF OUT_PALLET_QTY < 1 THEN 
SET WK_PALLET_QTY = 1 ; 
ELSE 
	SET WK_PALLET_QTY = OUT_PALLET_QTY ; 
END IF ; 
SET OUT_PALLET_WGT = WK_PALLET_WGT * WK_PALLET_QTY ; 
	SET OUT_TOTAL_WGT = OUT_TOTAL_WGT + OUT_PALLET_WGT ; 
  
	RETURN ; 
  
END  ; 
  
GRANT ALTER , EXECUTE   
ON SPECIFIC PROCEDURE SP_GET_ORDERTOTALS 
TO JVALANCE ; 
  
;
