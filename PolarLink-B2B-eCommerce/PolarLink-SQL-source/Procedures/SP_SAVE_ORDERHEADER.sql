SET PATH *LIBL ;

CREATE OR REPLACE PROCEDURE SP_SAVE_ORDERHEADER ( 
	IN IN_ORDERNUM DECIMAL(8, 0) , 
	IN IN_SCHEDULEDELIVDATE DECIMAL(8, 0) , 
	IN IN_SCHEDULEDELIVTIME DECIMAL(6, 0) , 
	IN IN_PO1 CHAR(23) , 
	IN IN_PO2 CHAR(23) , 
	IN IN_PO3 CHAR(23) , 
	IN IN_USER VARCHAR(15) , 
	OUT OUT_RESULT CHAR(1) , 
	OUT OUT_MESSAGE VARCHAR(100) ) 
	LANGUAGE SQL 
	SPECIFIC SP_SAVE_ORDERHEADER 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
/*================================================================================ 
Created August 2015 by John Valance 
  
Save information entered on the Order Header page. 
=================================================================================*/ 
	DECLARE WK_ENTRYSTEP INTEGER ; 
	DECLARE WK_PO2 CHAR ( 23 ) ; 
	DECLARE REQDATE CHAR ( 8 ) DEFAULT '        ' ; 
  
	DECLARE CUSTNUM DEC ( 8 , 0 ) DEFAULT 0 ; 
	DECLARE CUSTALPHA CHAR ( 8 ) DEFAULT '        ' ; 
	DECLARE SCHEDULEDELIVALPHA CHAR ( 8 ) DEFAULT '        ' ; 
	DECLARE DELIV_TYPE CHAR ( 10 ) DEFAULT ' ' ; 
  
	DECLARE SHIPTO DEC ( 4 , 0 ) DEFAULT 0 ; 
	DECLARE SHIPTOALPHA CHAR ( 4 ) DEFAULT '        ' ; 
  
  
	 -- Initialize work variables 
	SET OUT_MESSAGE = '' ; 
	SET OUT_RESULT = '1' ; 
  
	 -- Ensure last entry step is at least 2 (i.e., order header entry completed) 
	SELECT PLINK_ENTRY_STEP , HCUST , HSHIP , HVIA 
	INTO WK_ENTRYSTEP , CUSTNUM , SHIPTO , DELIV_TYPE 
	FROM ECH_PLNK 
	WHERE HORD = IN_ORDERNUM ; 
  
	IF WK_ENTRYSTEP < 2 THEN 
		SET WK_ENTRYSTEP = 2 ; 
	END IF ; 
  
	IF DELIV_TYPE <> 'P' 
		THEN SET DELIV_TYPE = 'D' ; 
	END IF ; 
  
	SET CUSTALPHA = DIGITS ( CUSTNUM ) ; 
	SET SHIPTOALPHA = DIGITS ( SHIPTO ) ; 
	SET SCHEDULEDELIVALPHA = DIGITS ( IN_SCHEDULEDELIVDATE ) ; 
  
	CALL SYS664 ( 'SYS664' ) ;  -- load LDA 
	CALL REQDATE ( CUSTALPHA , SHIPTOALPHA , SCHEDULEDELIVALPHA , DELIV_TYPE , REQDATE ) ; 
  
	UPDATE ECH_PLNK SET 
		HSDTE = IN_SCHEDULEDELIVDATE , 
		HRDTE = REQDATE , 
		CHSSTM = IN_SCHEDULEDELIVTIME , 
		HCPO = UPPER ( IN_PO1 ) , 
		CHMNDT = FN_CURRDATE8 ( ) , 
		CHMNTM = FN_CURRTIME6 ( ) , 
		CHMNUS = IN_USER , 
		PLINK_ENTRY_STEP = WK_ENTRYSTEP 
	WHERE HORD = IN_ORDERNUM ; 
  
	 -- See if order header extension record exists already 
	SELECT HEAPO1 INTO WK_PO2 
	FROM ECHE_PLNK WHERE HEORD = IN_ORDERNUM ; 
  
	IF WK_PO2 IS NULL THEN 
		INSERT INTO ECHE_PLNK 
			( HEORD , HEAPO1 , HEAPO2 ) 
		VALUES 
			( IN_ORDERNUM , UPPER ( IN_PO2 ) , UPPER ( IN_PO3 ) ) ; 
	ELSE 
		UPDATE ECHE_PLNK SET 
			HEAPO1 = UPPER ( IN_PO2 ) , 
			HEAPO2 = UPPER ( IN_PO3 ) 
		WHERE HEORD = IN_ORDERNUM ; 
	END IF ; 
  
	RETURN ; 
END  ; 
  
GRANT ALTER , EXECUTE   
ON SPECIFIC PROCEDURE SP_SAVE_ORDERHEADER 
TO JVALANCE ; 
  
;
